
001HelloWorld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b68  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000010  08000c98  08000c98  00010c98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000ca8  08000ca8  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08000ca8  08000ca8  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000ca8  08000ca8  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ca8  08000ca8  00010ca8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000cac  08000cac  00010cac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08000cb0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08000d0c  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08000d0c  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020085  2**0
                  CONTENTS, READONLY
 13 .debug_info   000008f1  00000000  00000000  000200c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002c6  00000000  00000000  000209b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00020c80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000be  00000000  00000000  00020d98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c83  00000000  00000000  00020e56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000016bd  00000000  00000000  00023ad9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000972c  00000000  00000000  00025196  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000009c8  00000000  00000000  0002e8c4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000058  00000000  00000000  0002f28c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	2000005c 	.word	0x2000005c
 800014c:	00000000 	.word	0x00000000
 8000150:	08000c80 	.word	0x08000c80

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000060 	.word	0x20000060
 800016c:	08000c80 	.word	0x08000c80

08000170 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
    /* Loop forever */
		printf("Hello World !\n");
 8000174:	4801      	ldr	r0, [pc, #4]	; (800017c <main+0xc>)
 8000176:	f000 f9f7 	bl	8000568 <puts>

	for(;;);
 800017a:	e7fe      	b.n	800017a <main+0xa>
 800017c:	08000c98 	.word	0x08000c98

08000180 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000180:	b480      	push	{r7}
 8000182:	b083      	sub	sp, #12
 8000184:	af00      	add	r7, sp, #0
 8000186:	4603      	mov	r3, r0
 8000188:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800018a:	4b0e      	ldr	r3, [pc, #56]	; (80001c4 <ITM_SendChar+0x44>)
 800018c:	681b      	ldr	r3, [r3, #0]
 800018e:	4a0d      	ldr	r2, [pc, #52]	; (80001c4 <ITM_SendChar+0x44>)
 8000190:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000194:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000196:	4b0c      	ldr	r3, [pc, #48]	; (80001c8 <ITM_SendChar+0x48>)
 8000198:	681b      	ldr	r3, [r3, #0]
 800019a:	4a0b      	ldr	r2, [pc, #44]	; (80001c8 <ITM_SendChar+0x48>)
 800019c:	f043 0301 	orr.w	r3, r3, #1
 80001a0:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80001a2:	bf00      	nop
 80001a4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80001a8:	681b      	ldr	r3, [r3, #0]
 80001aa:	f003 0301 	and.w	r3, r3, #1
 80001ae:	2b00      	cmp	r3, #0
 80001b0:	d0f8      	beq.n	80001a4 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80001b2:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80001b6:	79fb      	ldrb	r3, [r7, #7]
 80001b8:	6013      	str	r3, [r2, #0]
}
 80001ba:	bf00      	nop
 80001bc:	370c      	adds	r7, #12
 80001be:	46bd      	mov	sp, r7
 80001c0:	bc80      	pop	{r7}
 80001c2:	4770      	bx	lr
 80001c4:	e000edfc 	.word	0xe000edfc
 80001c8:	e0000e00 	.word	0xe0000e00

080001cc <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80001cc:	b580      	push	{r7, lr}
 80001ce:	b086      	sub	sp, #24
 80001d0:	af00      	add	r7, sp, #0
 80001d2:	60f8      	str	r0, [r7, #12]
 80001d4:	60b9      	str	r1, [r7, #8]
 80001d6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001d8:	2300      	movs	r3, #0
 80001da:	617b      	str	r3, [r7, #20]
 80001dc:	e00a      	b.n	80001f4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80001de:	f3af 8000 	nop.w
 80001e2:	4601      	mov	r1, r0
 80001e4:	68bb      	ldr	r3, [r7, #8]
 80001e6:	1c5a      	adds	r2, r3, #1
 80001e8:	60ba      	str	r2, [r7, #8]
 80001ea:	b2ca      	uxtb	r2, r1
 80001ec:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001ee:	697b      	ldr	r3, [r7, #20]
 80001f0:	3301      	adds	r3, #1
 80001f2:	617b      	str	r3, [r7, #20]
 80001f4:	697a      	ldr	r2, [r7, #20]
 80001f6:	687b      	ldr	r3, [r7, #4]
 80001f8:	429a      	cmp	r2, r3
 80001fa:	dbf0      	blt.n	80001de <_read+0x12>
  }

  return len;
 80001fc:	687b      	ldr	r3, [r7, #4]
}
 80001fe:	4618      	mov	r0, r3
 8000200:	3718      	adds	r7, #24
 8000202:	46bd      	mov	sp, r7
 8000204:	bd80      	pop	{r7, pc}

08000206 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000206:	b580      	push	{r7, lr}
 8000208:	b086      	sub	sp, #24
 800020a:	af00      	add	r7, sp, #0
 800020c:	60f8      	str	r0, [r7, #12]
 800020e:	60b9      	str	r1, [r7, #8]
 8000210:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000212:	2300      	movs	r3, #0
 8000214:	617b      	str	r3, [r7, #20]
 8000216:	e009      	b.n	800022c <_write+0x26>
  {
   // __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000218:	68bb      	ldr	r3, [r7, #8]
 800021a:	1c5a      	adds	r2, r3, #1
 800021c:	60ba      	str	r2, [r7, #8]
 800021e:	781b      	ldrb	r3, [r3, #0]
 8000220:	4618      	mov	r0, r3
 8000222:	f7ff ffad 	bl	8000180 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000226:	697b      	ldr	r3, [r7, #20]
 8000228:	3301      	adds	r3, #1
 800022a:	617b      	str	r3, [r7, #20]
 800022c:	697a      	ldr	r2, [r7, #20]
 800022e:	687b      	ldr	r3, [r7, #4]
 8000230:	429a      	cmp	r2, r3
 8000232:	dbf1      	blt.n	8000218 <_write+0x12>
  }
  return len;
 8000234:	687b      	ldr	r3, [r7, #4]
}
 8000236:	4618      	mov	r0, r3
 8000238:	3718      	adds	r7, #24
 800023a:	46bd      	mov	sp, r7
 800023c:	bd80      	pop	{r7, pc}

0800023e <_close>:

int _close(int file)
{
 800023e:	b480      	push	{r7}
 8000240:	b083      	sub	sp, #12
 8000242:	af00      	add	r7, sp, #0
 8000244:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000246:	f04f 33ff 	mov.w	r3, #4294967295
}
 800024a:	4618      	mov	r0, r3
 800024c:	370c      	adds	r7, #12
 800024e:	46bd      	mov	sp, r7
 8000250:	bc80      	pop	{r7}
 8000252:	4770      	bx	lr

08000254 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000254:	b480      	push	{r7}
 8000256:	b083      	sub	sp, #12
 8000258:	af00      	add	r7, sp, #0
 800025a:	6078      	str	r0, [r7, #4]
 800025c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800025e:	683b      	ldr	r3, [r7, #0]
 8000260:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000264:	605a      	str	r2, [r3, #4]
  return 0;
 8000266:	2300      	movs	r3, #0
}
 8000268:	4618      	mov	r0, r3
 800026a:	370c      	adds	r7, #12
 800026c:	46bd      	mov	sp, r7
 800026e:	bc80      	pop	{r7}
 8000270:	4770      	bx	lr

08000272 <_isatty>:

int _isatty(int file)
{
 8000272:	b480      	push	{r7}
 8000274:	b083      	sub	sp, #12
 8000276:	af00      	add	r7, sp, #0
 8000278:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800027a:	2301      	movs	r3, #1
}
 800027c:	4618      	mov	r0, r3
 800027e:	370c      	adds	r7, #12
 8000280:	46bd      	mov	sp, r7
 8000282:	bc80      	pop	{r7}
 8000284:	4770      	bx	lr

08000286 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000286:	b480      	push	{r7}
 8000288:	b085      	sub	sp, #20
 800028a:	af00      	add	r7, sp, #0
 800028c:	60f8      	str	r0, [r7, #12]
 800028e:	60b9      	str	r1, [r7, #8]
 8000290:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000292:	2300      	movs	r3, #0
}
 8000294:	4618      	mov	r0, r3
 8000296:	3714      	adds	r7, #20
 8000298:	46bd      	mov	sp, r7
 800029a:	bc80      	pop	{r7}
 800029c:	4770      	bx	lr
	...

080002a0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b086      	sub	sp, #24
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002a8:	4a14      	ldr	r2, [pc, #80]	; (80002fc <_sbrk+0x5c>)
 80002aa:	4b15      	ldr	r3, [pc, #84]	; (8000300 <_sbrk+0x60>)
 80002ac:	1ad3      	subs	r3, r2, r3
 80002ae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002b0:	697b      	ldr	r3, [r7, #20]
 80002b2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80002b4:	4b13      	ldr	r3, [pc, #76]	; (8000304 <_sbrk+0x64>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d102      	bne.n	80002c2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80002bc:	4b11      	ldr	r3, [pc, #68]	; (8000304 <_sbrk+0x64>)
 80002be:	4a12      	ldr	r2, [pc, #72]	; (8000308 <_sbrk+0x68>)
 80002c0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80002c2:	4b10      	ldr	r3, [pc, #64]	; (8000304 <_sbrk+0x64>)
 80002c4:	681a      	ldr	r2, [r3, #0]
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4413      	add	r3, r2
 80002ca:	693a      	ldr	r2, [r7, #16]
 80002cc:	429a      	cmp	r2, r3
 80002ce:	d207      	bcs.n	80002e0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80002d0:	f000 fa78 	bl	80007c4 <__errno>
 80002d4:	4603      	mov	r3, r0
 80002d6:	220c      	movs	r2, #12
 80002d8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80002da:	f04f 33ff 	mov.w	r3, #4294967295
 80002de:	e009      	b.n	80002f4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80002e0:	4b08      	ldr	r3, [pc, #32]	; (8000304 <_sbrk+0x64>)
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80002e6:	4b07      	ldr	r3, [pc, #28]	; (8000304 <_sbrk+0x64>)
 80002e8:	681a      	ldr	r2, [r3, #0]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4413      	add	r3, r2
 80002ee:	4a05      	ldr	r2, [pc, #20]	; (8000304 <_sbrk+0x64>)
 80002f0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80002f2:	68fb      	ldr	r3, [r7, #12]
}
 80002f4:	4618      	mov	r0, r3
 80002f6:	3718      	adds	r7, #24
 80002f8:	46bd      	mov	sp, r7
 80002fa:	bd80      	pop	{r7, pc}
 80002fc:	20005000 	.word	0x20005000
 8000300:	00000400 	.word	0x00000400
 8000304:	20000078 	.word	0x20000078
 8000308:	200001c8 	.word	0x200001c8

0800030c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800030c:	480d      	ldr	r0, [pc, #52]	; (8000344 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800030e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000310:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000314:	480c      	ldr	r0, [pc, #48]	; (8000348 <LoopForever+0x6>)
  ldr r1, =_edata
 8000316:	490d      	ldr	r1, [pc, #52]	; (800034c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000318:	4a0d      	ldr	r2, [pc, #52]	; (8000350 <LoopForever+0xe>)
  movs r3, #0
 800031a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800031c:	e002      	b.n	8000324 <LoopCopyDataInit>

0800031e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800031e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000320:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000322:	3304      	adds	r3, #4

08000324 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000324:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000326:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000328:	d3f9      	bcc.n	800031e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800032a:	4a0a      	ldr	r2, [pc, #40]	; (8000354 <LoopForever+0x12>)
  ldr r4, =_ebss
 800032c:	4c0a      	ldr	r4, [pc, #40]	; (8000358 <LoopForever+0x16>)
  movs r3, #0
 800032e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000330:	e001      	b.n	8000336 <LoopFillZerobss>

08000332 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000332:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000334:	3204      	adds	r2, #4

08000336 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000336:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000338:	d3fb      	bcc.n	8000332 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800033a:	f000 fa49 	bl	80007d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800033e:	f7ff ff17 	bl	8000170 <main>

08000342 <LoopForever>:

LoopForever:
  b LoopForever
 8000342:	e7fe      	b.n	8000342 <LoopForever>
  ldr   r0, =_estack
 8000344:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000348:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800034c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000350:	08000cb0 	.word	0x08000cb0
  ldr r2, =_sbss
 8000354:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000358:	200001c8 	.word	0x200001c8

0800035c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800035c:	e7fe      	b.n	800035c <ADC1_2_IRQHandler>
	...

08000360 <std>:
 8000360:	2300      	movs	r3, #0
 8000362:	b510      	push	{r4, lr}
 8000364:	4604      	mov	r4, r0
 8000366:	e9c0 3300 	strd	r3, r3, [r0]
 800036a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800036e:	6083      	str	r3, [r0, #8]
 8000370:	8181      	strh	r1, [r0, #12]
 8000372:	6643      	str	r3, [r0, #100]	; 0x64
 8000374:	81c2      	strh	r2, [r0, #14]
 8000376:	6183      	str	r3, [r0, #24]
 8000378:	4619      	mov	r1, r3
 800037a:	2208      	movs	r2, #8
 800037c:	305c      	adds	r0, #92	; 0x5c
 800037e:	f000 f9d3 	bl	8000728 <memset>
 8000382:	4b05      	ldr	r3, [pc, #20]	; (8000398 <std+0x38>)
 8000384:	6224      	str	r4, [r4, #32]
 8000386:	6263      	str	r3, [r4, #36]	; 0x24
 8000388:	4b04      	ldr	r3, [pc, #16]	; (800039c <std+0x3c>)
 800038a:	62a3      	str	r3, [r4, #40]	; 0x28
 800038c:	4b04      	ldr	r3, [pc, #16]	; (80003a0 <std+0x40>)
 800038e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000390:	4b04      	ldr	r3, [pc, #16]	; (80003a4 <std+0x44>)
 8000392:	6323      	str	r3, [r4, #48]	; 0x30
 8000394:	bd10      	pop	{r4, pc}
 8000396:	bf00      	nop
 8000398:	08000579 	.word	0x08000579
 800039c:	0800059b 	.word	0x0800059b
 80003a0:	080005d3 	.word	0x080005d3
 80003a4:	080005f7 	.word	0x080005f7

080003a8 <stdio_exit_handler>:
 80003a8:	4a02      	ldr	r2, [pc, #8]	; (80003b4 <stdio_exit_handler+0xc>)
 80003aa:	4903      	ldr	r1, [pc, #12]	; (80003b8 <stdio_exit_handler+0x10>)
 80003ac:	4803      	ldr	r0, [pc, #12]	; (80003bc <stdio_exit_handler+0x14>)
 80003ae:	f000 b869 	b.w	8000484 <_fwalk_sglue>
 80003b2:	bf00      	nop
 80003b4:	20000000 	.word	0x20000000
 80003b8:	08000b09 	.word	0x08000b09
 80003bc:	2000000c 	.word	0x2000000c

080003c0 <cleanup_stdio>:
 80003c0:	6841      	ldr	r1, [r0, #4]
 80003c2:	4b0c      	ldr	r3, [pc, #48]	; (80003f4 <cleanup_stdio+0x34>)
 80003c4:	b510      	push	{r4, lr}
 80003c6:	4299      	cmp	r1, r3
 80003c8:	4604      	mov	r4, r0
 80003ca:	d001      	beq.n	80003d0 <cleanup_stdio+0x10>
 80003cc:	f000 fb9c 	bl	8000b08 <_fflush_r>
 80003d0:	68a1      	ldr	r1, [r4, #8]
 80003d2:	4b09      	ldr	r3, [pc, #36]	; (80003f8 <cleanup_stdio+0x38>)
 80003d4:	4299      	cmp	r1, r3
 80003d6:	d002      	beq.n	80003de <cleanup_stdio+0x1e>
 80003d8:	4620      	mov	r0, r4
 80003da:	f000 fb95 	bl	8000b08 <_fflush_r>
 80003de:	68e1      	ldr	r1, [r4, #12]
 80003e0:	4b06      	ldr	r3, [pc, #24]	; (80003fc <cleanup_stdio+0x3c>)
 80003e2:	4299      	cmp	r1, r3
 80003e4:	d004      	beq.n	80003f0 <cleanup_stdio+0x30>
 80003e6:	4620      	mov	r0, r4
 80003e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80003ec:	f000 bb8c 	b.w	8000b08 <_fflush_r>
 80003f0:	bd10      	pop	{r4, pc}
 80003f2:	bf00      	nop
 80003f4:	2000007c 	.word	0x2000007c
 80003f8:	200000e4 	.word	0x200000e4
 80003fc:	2000014c 	.word	0x2000014c

08000400 <global_stdio_init.part.0>:
 8000400:	b510      	push	{r4, lr}
 8000402:	4b0b      	ldr	r3, [pc, #44]	; (8000430 <global_stdio_init.part.0+0x30>)
 8000404:	4c0b      	ldr	r4, [pc, #44]	; (8000434 <global_stdio_init.part.0+0x34>)
 8000406:	4a0c      	ldr	r2, [pc, #48]	; (8000438 <global_stdio_init.part.0+0x38>)
 8000408:	4620      	mov	r0, r4
 800040a:	601a      	str	r2, [r3, #0]
 800040c:	2104      	movs	r1, #4
 800040e:	2200      	movs	r2, #0
 8000410:	f7ff ffa6 	bl	8000360 <std>
 8000414:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000418:	2201      	movs	r2, #1
 800041a:	2109      	movs	r1, #9
 800041c:	f7ff ffa0 	bl	8000360 <std>
 8000420:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000424:	2202      	movs	r2, #2
 8000426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800042a:	2112      	movs	r1, #18
 800042c:	f7ff bf98 	b.w	8000360 <std>
 8000430:	200001b4 	.word	0x200001b4
 8000434:	2000007c 	.word	0x2000007c
 8000438:	080003a9 	.word	0x080003a9

0800043c <__sfp_lock_acquire>:
 800043c:	4801      	ldr	r0, [pc, #4]	; (8000444 <__sfp_lock_acquire+0x8>)
 800043e:	f000 b9eb 	b.w	8000818 <__retarget_lock_acquire_recursive>
 8000442:	bf00      	nop
 8000444:	200001bd 	.word	0x200001bd

08000448 <__sfp_lock_release>:
 8000448:	4801      	ldr	r0, [pc, #4]	; (8000450 <__sfp_lock_release+0x8>)
 800044a:	f000 b9e6 	b.w	800081a <__retarget_lock_release_recursive>
 800044e:	bf00      	nop
 8000450:	200001bd 	.word	0x200001bd

08000454 <__sinit>:
 8000454:	b510      	push	{r4, lr}
 8000456:	4604      	mov	r4, r0
 8000458:	f7ff fff0 	bl	800043c <__sfp_lock_acquire>
 800045c:	6a23      	ldr	r3, [r4, #32]
 800045e:	b11b      	cbz	r3, 8000468 <__sinit+0x14>
 8000460:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000464:	f7ff bff0 	b.w	8000448 <__sfp_lock_release>
 8000468:	4b04      	ldr	r3, [pc, #16]	; (800047c <__sinit+0x28>)
 800046a:	6223      	str	r3, [r4, #32]
 800046c:	4b04      	ldr	r3, [pc, #16]	; (8000480 <__sinit+0x2c>)
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	2b00      	cmp	r3, #0
 8000472:	d1f5      	bne.n	8000460 <__sinit+0xc>
 8000474:	f7ff ffc4 	bl	8000400 <global_stdio_init.part.0>
 8000478:	e7f2      	b.n	8000460 <__sinit+0xc>
 800047a:	bf00      	nop
 800047c:	080003c1 	.word	0x080003c1
 8000480:	200001b4 	.word	0x200001b4

08000484 <_fwalk_sglue>:
 8000484:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000488:	4607      	mov	r7, r0
 800048a:	4688      	mov	r8, r1
 800048c:	4614      	mov	r4, r2
 800048e:	2600      	movs	r6, #0
 8000490:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000494:	f1b9 0901 	subs.w	r9, r9, #1
 8000498:	d505      	bpl.n	80004a6 <_fwalk_sglue+0x22>
 800049a:	6824      	ldr	r4, [r4, #0]
 800049c:	2c00      	cmp	r4, #0
 800049e:	d1f7      	bne.n	8000490 <_fwalk_sglue+0xc>
 80004a0:	4630      	mov	r0, r6
 80004a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80004a6:	89ab      	ldrh	r3, [r5, #12]
 80004a8:	2b01      	cmp	r3, #1
 80004aa:	d907      	bls.n	80004bc <_fwalk_sglue+0x38>
 80004ac:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80004b0:	3301      	adds	r3, #1
 80004b2:	d003      	beq.n	80004bc <_fwalk_sglue+0x38>
 80004b4:	4629      	mov	r1, r5
 80004b6:	4638      	mov	r0, r7
 80004b8:	47c0      	blx	r8
 80004ba:	4306      	orrs	r6, r0
 80004bc:	3568      	adds	r5, #104	; 0x68
 80004be:	e7e9      	b.n	8000494 <_fwalk_sglue+0x10>

080004c0 <_puts_r>:
 80004c0:	6a03      	ldr	r3, [r0, #32]
 80004c2:	b570      	push	{r4, r5, r6, lr}
 80004c4:	4605      	mov	r5, r0
 80004c6:	460e      	mov	r6, r1
 80004c8:	6884      	ldr	r4, [r0, #8]
 80004ca:	b90b      	cbnz	r3, 80004d0 <_puts_r+0x10>
 80004cc:	f7ff ffc2 	bl	8000454 <__sinit>
 80004d0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80004d2:	07db      	lsls	r3, r3, #31
 80004d4:	d405      	bmi.n	80004e2 <_puts_r+0x22>
 80004d6:	89a3      	ldrh	r3, [r4, #12]
 80004d8:	0598      	lsls	r0, r3, #22
 80004da:	d402      	bmi.n	80004e2 <_puts_r+0x22>
 80004dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80004de:	f000 f99b 	bl	8000818 <__retarget_lock_acquire_recursive>
 80004e2:	89a3      	ldrh	r3, [r4, #12]
 80004e4:	0719      	lsls	r1, r3, #28
 80004e6:	d513      	bpl.n	8000510 <_puts_r+0x50>
 80004e8:	6923      	ldr	r3, [r4, #16]
 80004ea:	b18b      	cbz	r3, 8000510 <_puts_r+0x50>
 80004ec:	3e01      	subs	r6, #1
 80004ee:	68a3      	ldr	r3, [r4, #8]
 80004f0:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80004f4:	3b01      	subs	r3, #1
 80004f6:	60a3      	str	r3, [r4, #8]
 80004f8:	b9e9      	cbnz	r1, 8000536 <_puts_r+0x76>
 80004fa:	2b00      	cmp	r3, #0
 80004fc:	da2e      	bge.n	800055c <_puts_r+0x9c>
 80004fe:	4622      	mov	r2, r4
 8000500:	210a      	movs	r1, #10
 8000502:	4628      	mov	r0, r5
 8000504:	f000 f87b 	bl	80005fe <__swbuf_r>
 8000508:	3001      	adds	r0, #1
 800050a:	d007      	beq.n	800051c <_puts_r+0x5c>
 800050c:	250a      	movs	r5, #10
 800050e:	e007      	b.n	8000520 <_puts_r+0x60>
 8000510:	4621      	mov	r1, r4
 8000512:	4628      	mov	r0, r5
 8000514:	f000 f8b0 	bl	8000678 <__swsetup_r>
 8000518:	2800      	cmp	r0, #0
 800051a:	d0e7      	beq.n	80004ec <_puts_r+0x2c>
 800051c:	f04f 35ff 	mov.w	r5, #4294967295
 8000520:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000522:	07da      	lsls	r2, r3, #31
 8000524:	d405      	bmi.n	8000532 <_puts_r+0x72>
 8000526:	89a3      	ldrh	r3, [r4, #12]
 8000528:	059b      	lsls	r3, r3, #22
 800052a:	d402      	bmi.n	8000532 <_puts_r+0x72>
 800052c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800052e:	f000 f974 	bl	800081a <__retarget_lock_release_recursive>
 8000532:	4628      	mov	r0, r5
 8000534:	bd70      	pop	{r4, r5, r6, pc}
 8000536:	2b00      	cmp	r3, #0
 8000538:	da04      	bge.n	8000544 <_puts_r+0x84>
 800053a:	69a2      	ldr	r2, [r4, #24]
 800053c:	429a      	cmp	r2, r3
 800053e:	dc06      	bgt.n	800054e <_puts_r+0x8e>
 8000540:	290a      	cmp	r1, #10
 8000542:	d004      	beq.n	800054e <_puts_r+0x8e>
 8000544:	6823      	ldr	r3, [r4, #0]
 8000546:	1c5a      	adds	r2, r3, #1
 8000548:	6022      	str	r2, [r4, #0]
 800054a:	7019      	strb	r1, [r3, #0]
 800054c:	e7cf      	b.n	80004ee <_puts_r+0x2e>
 800054e:	4622      	mov	r2, r4
 8000550:	4628      	mov	r0, r5
 8000552:	f000 f854 	bl	80005fe <__swbuf_r>
 8000556:	3001      	adds	r0, #1
 8000558:	d1c9      	bne.n	80004ee <_puts_r+0x2e>
 800055a:	e7df      	b.n	800051c <_puts_r+0x5c>
 800055c:	250a      	movs	r5, #10
 800055e:	6823      	ldr	r3, [r4, #0]
 8000560:	1c5a      	adds	r2, r3, #1
 8000562:	6022      	str	r2, [r4, #0]
 8000564:	701d      	strb	r5, [r3, #0]
 8000566:	e7db      	b.n	8000520 <_puts_r+0x60>

08000568 <puts>:
 8000568:	4b02      	ldr	r3, [pc, #8]	; (8000574 <puts+0xc>)
 800056a:	4601      	mov	r1, r0
 800056c:	6818      	ldr	r0, [r3, #0]
 800056e:	f7ff bfa7 	b.w	80004c0 <_puts_r>
 8000572:	bf00      	nop
 8000574:	20000058 	.word	0x20000058

08000578 <__sread>:
 8000578:	b510      	push	{r4, lr}
 800057a:	460c      	mov	r4, r1
 800057c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000580:	f000 f8fc 	bl	800077c <_read_r>
 8000584:	2800      	cmp	r0, #0
 8000586:	bfab      	itete	ge
 8000588:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800058a:	89a3      	ldrhlt	r3, [r4, #12]
 800058c:	181b      	addge	r3, r3, r0
 800058e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000592:	bfac      	ite	ge
 8000594:	6563      	strge	r3, [r4, #84]	; 0x54
 8000596:	81a3      	strhlt	r3, [r4, #12]
 8000598:	bd10      	pop	{r4, pc}

0800059a <__swrite>:
 800059a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800059e:	461f      	mov	r7, r3
 80005a0:	898b      	ldrh	r3, [r1, #12]
 80005a2:	4605      	mov	r5, r0
 80005a4:	05db      	lsls	r3, r3, #23
 80005a6:	460c      	mov	r4, r1
 80005a8:	4616      	mov	r6, r2
 80005aa:	d505      	bpl.n	80005b8 <__swrite+0x1e>
 80005ac:	2302      	movs	r3, #2
 80005ae:	2200      	movs	r2, #0
 80005b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005b4:	f000 f8d0 	bl	8000758 <_lseek_r>
 80005b8:	89a3      	ldrh	r3, [r4, #12]
 80005ba:	4632      	mov	r2, r6
 80005bc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80005c0:	81a3      	strh	r3, [r4, #12]
 80005c2:	4628      	mov	r0, r5
 80005c4:	463b      	mov	r3, r7
 80005c6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80005ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80005ce:	f000 b8e7 	b.w	80007a0 <_write_r>

080005d2 <__sseek>:
 80005d2:	b510      	push	{r4, lr}
 80005d4:	460c      	mov	r4, r1
 80005d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005da:	f000 f8bd 	bl	8000758 <_lseek_r>
 80005de:	1c43      	adds	r3, r0, #1
 80005e0:	89a3      	ldrh	r3, [r4, #12]
 80005e2:	bf15      	itete	ne
 80005e4:	6560      	strne	r0, [r4, #84]	; 0x54
 80005e6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80005ea:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80005ee:	81a3      	strheq	r3, [r4, #12]
 80005f0:	bf18      	it	ne
 80005f2:	81a3      	strhne	r3, [r4, #12]
 80005f4:	bd10      	pop	{r4, pc}

080005f6 <__sclose>:
 80005f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005fa:	f000 b89d 	b.w	8000738 <_close_r>

080005fe <__swbuf_r>:
 80005fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000600:	460e      	mov	r6, r1
 8000602:	4614      	mov	r4, r2
 8000604:	4605      	mov	r5, r0
 8000606:	b118      	cbz	r0, 8000610 <__swbuf_r+0x12>
 8000608:	6a03      	ldr	r3, [r0, #32]
 800060a:	b90b      	cbnz	r3, 8000610 <__swbuf_r+0x12>
 800060c:	f7ff ff22 	bl	8000454 <__sinit>
 8000610:	69a3      	ldr	r3, [r4, #24]
 8000612:	60a3      	str	r3, [r4, #8]
 8000614:	89a3      	ldrh	r3, [r4, #12]
 8000616:	071a      	lsls	r2, r3, #28
 8000618:	d525      	bpl.n	8000666 <__swbuf_r+0x68>
 800061a:	6923      	ldr	r3, [r4, #16]
 800061c:	b31b      	cbz	r3, 8000666 <__swbuf_r+0x68>
 800061e:	6823      	ldr	r3, [r4, #0]
 8000620:	6922      	ldr	r2, [r4, #16]
 8000622:	b2f6      	uxtb	r6, r6
 8000624:	1a98      	subs	r0, r3, r2
 8000626:	6963      	ldr	r3, [r4, #20]
 8000628:	4637      	mov	r7, r6
 800062a:	4283      	cmp	r3, r0
 800062c:	dc04      	bgt.n	8000638 <__swbuf_r+0x3a>
 800062e:	4621      	mov	r1, r4
 8000630:	4628      	mov	r0, r5
 8000632:	f000 fa69 	bl	8000b08 <_fflush_r>
 8000636:	b9e0      	cbnz	r0, 8000672 <__swbuf_r+0x74>
 8000638:	68a3      	ldr	r3, [r4, #8]
 800063a:	3b01      	subs	r3, #1
 800063c:	60a3      	str	r3, [r4, #8]
 800063e:	6823      	ldr	r3, [r4, #0]
 8000640:	1c5a      	adds	r2, r3, #1
 8000642:	6022      	str	r2, [r4, #0]
 8000644:	701e      	strb	r6, [r3, #0]
 8000646:	6962      	ldr	r2, [r4, #20]
 8000648:	1c43      	adds	r3, r0, #1
 800064a:	429a      	cmp	r2, r3
 800064c:	d004      	beq.n	8000658 <__swbuf_r+0x5a>
 800064e:	89a3      	ldrh	r3, [r4, #12]
 8000650:	07db      	lsls	r3, r3, #31
 8000652:	d506      	bpl.n	8000662 <__swbuf_r+0x64>
 8000654:	2e0a      	cmp	r6, #10
 8000656:	d104      	bne.n	8000662 <__swbuf_r+0x64>
 8000658:	4621      	mov	r1, r4
 800065a:	4628      	mov	r0, r5
 800065c:	f000 fa54 	bl	8000b08 <_fflush_r>
 8000660:	b938      	cbnz	r0, 8000672 <__swbuf_r+0x74>
 8000662:	4638      	mov	r0, r7
 8000664:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000666:	4621      	mov	r1, r4
 8000668:	4628      	mov	r0, r5
 800066a:	f000 f805 	bl	8000678 <__swsetup_r>
 800066e:	2800      	cmp	r0, #0
 8000670:	d0d5      	beq.n	800061e <__swbuf_r+0x20>
 8000672:	f04f 37ff 	mov.w	r7, #4294967295
 8000676:	e7f4      	b.n	8000662 <__swbuf_r+0x64>

08000678 <__swsetup_r>:
 8000678:	b538      	push	{r3, r4, r5, lr}
 800067a:	4b2a      	ldr	r3, [pc, #168]	; (8000724 <__swsetup_r+0xac>)
 800067c:	4605      	mov	r5, r0
 800067e:	6818      	ldr	r0, [r3, #0]
 8000680:	460c      	mov	r4, r1
 8000682:	b118      	cbz	r0, 800068c <__swsetup_r+0x14>
 8000684:	6a03      	ldr	r3, [r0, #32]
 8000686:	b90b      	cbnz	r3, 800068c <__swsetup_r+0x14>
 8000688:	f7ff fee4 	bl	8000454 <__sinit>
 800068c:	89a3      	ldrh	r3, [r4, #12]
 800068e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000692:	0718      	lsls	r0, r3, #28
 8000694:	d422      	bmi.n	80006dc <__swsetup_r+0x64>
 8000696:	06d9      	lsls	r1, r3, #27
 8000698:	d407      	bmi.n	80006aa <__swsetup_r+0x32>
 800069a:	2309      	movs	r3, #9
 800069c:	602b      	str	r3, [r5, #0]
 800069e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80006a2:	f04f 30ff 	mov.w	r0, #4294967295
 80006a6:	81a3      	strh	r3, [r4, #12]
 80006a8:	e034      	b.n	8000714 <__swsetup_r+0x9c>
 80006aa:	0758      	lsls	r0, r3, #29
 80006ac:	d512      	bpl.n	80006d4 <__swsetup_r+0x5c>
 80006ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006b0:	b141      	cbz	r1, 80006c4 <__swsetup_r+0x4c>
 80006b2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006b6:	4299      	cmp	r1, r3
 80006b8:	d002      	beq.n	80006c0 <__swsetup_r+0x48>
 80006ba:	4628      	mov	r0, r5
 80006bc:	f000 f8ae 	bl	800081c <_free_r>
 80006c0:	2300      	movs	r3, #0
 80006c2:	6363      	str	r3, [r4, #52]	; 0x34
 80006c4:	89a3      	ldrh	r3, [r4, #12]
 80006c6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80006ca:	81a3      	strh	r3, [r4, #12]
 80006cc:	2300      	movs	r3, #0
 80006ce:	6063      	str	r3, [r4, #4]
 80006d0:	6923      	ldr	r3, [r4, #16]
 80006d2:	6023      	str	r3, [r4, #0]
 80006d4:	89a3      	ldrh	r3, [r4, #12]
 80006d6:	f043 0308 	orr.w	r3, r3, #8
 80006da:	81a3      	strh	r3, [r4, #12]
 80006dc:	6923      	ldr	r3, [r4, #16]
 80006de:	b94b      	cbnz	r3, 80006f4 <__swsetup_r+0x7c>
 80006e0:	89a3      	ldrh	r3, [r4, #12]
 80006e2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80006e6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80006ea:	d003      	beq.n	80006f4 <__swsetup_r+0x7c>
 80006ec:	4621      	mov	r1, r4
 80006ee:	4628      	mov	r0, r5
 80006f0:	f000 fa57 	bl	8000ba2 <__smakebuf_r>
 80006f4:	89a0      	ldrh	r0, [r4, #12]
 80006f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006fa:	f010 0301 	ands.w	r3, r0, #1
 80006fe:	d00a      	beq.n	8000716 <__swsetup_r+0x9e>
 8000700:	2300      	movs	r3, #0
 8000702:	60a3      	str	r3, [r4, #8]
 8000704:	6963      	ldr	r3, [r4, #20]
 8000706:	425b      	negs	r3, r3
 8000708:	61a3      	str	r3, [r4, #24]
 800070a:	6923      	ldr	r3, [r4, #16]
 800070c:	b943      	cbnz	r3, 8000720 <__swsetup_r+0xa8>
 800070e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000712:	d1c4      	bne.n	800069e <__swsetup_r+0x26>
 8000714:	bd38      	pop	{r3, r4, r5, pc}
 8000716:	0781      	lsls	r1, r0, #30
 8000718:	bf58      	it	pl
 800071a:	6963      	ldrpl	r3, [r4, #20]
 800071c:	60a3      	str	r3, [r4, #8]
 800071e:	e7f4      	b.n	800070a <__swsetup_r+0x92>
 8000720:	2000      	movs	r0, #0
 8000722:	e7f7      	b.n	8000714 <__swsetup_r+0x9c>
 8000724:	20000058 	.word	0x20000058

08000728 <memset>:
 8000728:	4603      	mov	r3, r0
 800072a:	4402      	add	r2, r0
 800072c:	4293      	cmp	r3, r2
 800072e:	d100      	bne.n	8000732 <memset+0xa>
 8000730:	4770      	bx	lr
 8000732:	f803 1b01 	strb.w	r1, [r3], #1
 8000736:	e7f9      	b.n	800072c <memset+0x4>

08000738 <_close_r>:
 8000738:	b538      	push	{r3, r4, r5, lr}
 800073a:	2300      	movs	r3, #0
 800073c:	4d05      	ldr	r5, [pc, #20]	; (8000754 <_close_r+0x1c>)
 800073e:	4604      	mov	r4, r0
 8000740:	4608      	mov	r0, r1
 8000742:	602b      	str	r3, [r5, #0]
 8000744:	f7ff fd7b 	bl	800023e <_close>
 8000748:	1c43      	adds	r3, r0, #1
 800074a:	d102      	bne.n	8000752 <_close_r+0x1a>
 800074c:	682b      	ldr	r3, [r5, #0]
 800074e:	b103      	cbz	r3, 8000752 <_close_r+0x1a>
 8000750:	6023      	str	r3, [r4, #0]
 8000752:	bd38      	pop	{r3, r4, r5, pc}
 8000754:	200001b8 	.word	0x200001b8

08000758 <_lseek_r>:
 8000758:	b538      	push	{r3, r4, r5, lr}
 800075a:	4604      	mov	r4, r0
 800075c:	4608      	mov	r0, r1
 800075e:	4611      	mov	r1, r2
 8000760:	2200      	movs	r2, #0
 8000762:	4d05      	ldr	r5, [pc, #20]	; (8000778 <_lseek_r+0x20>)
 8000764:	602a      	str	r2, [r5, #0]
 8000766:	461a      	mov	r2, r3
 8000768:	f7ff fd8d 	bl	8000286 <_lseek>
 800076c:	1c43      	adds	r3, r0, #1
 800076e:	d102      	bne.n	8000776 <_lseek_r+0x1e>
 8000770:	682b      	ldr	r3, [r5, #0]
 8000772:	b103      	cbz	r3, 8000776 <_lseek_r+0x1e>
 8000774:	6023      	str	r3, [r4, #0]
 8000776:	bd38      	pop	{r3, r4, r5, pc}
 8000778:	200001b8 	.word	0x200001b8

0800077c <_read_r>:
 800077c:	b538      	push	{r3, r4, r5, lr}
 800077e:	4604      	mov	r4, r0
 8000780:	4608      	mov	r0, r1
 8000782:	4611      	mov	r1, r2
 8000784:	2200      	movs	r2, #0
 8000786:	4d05      	ldr	r5, [pc, #20]	; (800079c <_read_r+0x20>)
 8000788:	602a      	str	r2, [r5, #0]
 800078a:	461a      	mov	r2, r3
 800078c:	f7ff fd1e 	bl	80001cc <_read>
 8000790:	1c43      	adds	r3, r0, #1
 8000792:	d102      	bne.n	800079a <_read_r+0x1e>
 8000794:	682b      	ldr	r3, [r5, #0]
 8000796:	b103      	cbz	r3, 800079a <_read_r+0x1e>
 8000798:	6023      	str	r3, [r4, #0]
 800079a:	bd38      	pop	{r3, r4, r5, pc}
 800079c:	200001b8 	.word	0x200001b8

080007a0 <_write_r>:
 80007a0:	b538      	push	{r3, r4, r5, lr}
 80007a2:	4604      	mov	r4, r0
 80007a4:	4608      	mov	r0, r1
 80007a6:	4611      	mov	r1, r2
 80007a8:	2200      	movs	r2, #0
 80007aa:	4d05      	ldr	r5, [pc, #20]	; (80007c0 <_write_r+0x20>)
 80007ac:	602a      	str	r2, [r5, #0]
 80007ae:	461a      	mov	r2, r3
 80007b0:	f7ff fd29 	bl	8000206 <_write>
 80007b4:	1c43      	adds	r3, r0, #1
 80007b6:	d102      	bne.n	80007be <_write_r+0x1e>
 80007b8:	682b      	ldr	r3, [r5, #0]
 80007ba:	b103      	cbz	r3, 80007be <_write_r+0x1e>
 80007bc:	6023      	str	r3, [r4, #0]
 80007be:	bd38      	pop	{r3, r4, r5, pc}
 80007c0:	200001b8 	.word	0x200001b8

080007c4 <__errno>:
 80007c4:	4b01      	ldr	r3, [pc, #4]	; (80007cc <__errno+0x8>)
 80007c6:	6818      	ldr	r0, [r3, #0]
 80007c8:	4770      	bx	lr
 80007ca:	bf00      	nop
 80007cc:	20000058 	.word	0x20000058

080007d0 <__libc_init_array>:
 80007d0:	b570      	push	{r4, r5, r6, lr}
 80007d2:	2600      	movs	r6, #0
 80007d4:	4d0c      	ldr	r5, [pc, #48]	; (8000808 <__libc_init_array+0x38>)
 80007d6:	4c0d      	ldr	r4, [pc, #52]	; (800080c <__libc_init_array+0x3c>)
 80007d8:	1b64      	subs	r4, r4, r5
 80007da:	10a4      	asrs	r4, r4, #2
 80007dc:	42a6      	cmp	r6, r4
 80007de:	d109      	bne.n	80007f4 <__libc_init_array+0x24>
 80007e0:	f000 fa4e 	bl	8000c80 <_init>
 80007e4:	2600      	movs	r6, #0
 80007e6:	4d0a      	ldr	r5, [pc, #40]	; (8000810 <__libc_init_array+0x40>)
 80007e8:	4c0a      	ldr	r4, [pc, #40]	; (8000814 <__libc_init_array+0x44>)
 80007ea:	1b64      	subs	r4, r4, r5
 80007ec:	10a4      	asrs	r4, r4, #2
 80007ee:	42a6      	cmp	r6, r4
 80007f0:	d105      	bne.n	80007fe <__libc_init_array+0x2e>
 80007f2:	bd70      	pop	{r4, r5, r6, pc}
 80007f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80007f8:	4798      	blx	r3
 80007fa:	3601      	adds	r6, #1
 80007fc:	e7ee      	b.n	80007dc <__libc_init_array+0xc>
 80007fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000802:	4798      	blx	r3
 8000804:	3601      	adds	r6, #1
 8000806:	e7f2      	b.n	80007ee <__libc_init_array+0x1e>
 8000808:	08000ca8 	.word	0x08000ca8
 800080c:	08000ca8 	.word	0x08000ca8
 8000810:	08000ca8 	.word	0x08000ca8
 8000814:	08000cac 	.word	0x08000cac

08000818 <__retarget_lock_acquire_recursive>:
 8000818:	4770      	bx	lr

0800081a <__retarget_lock_release_recursive>:
 800081a:	4770      	bx	lr

0800081c <_free_r>:
 800081c:	b538      	push	{r3, r4, r5, lr}
 800081e:	4605      	mov	r5, r0
 8000820:	2900      	cmp	r1, #0
 8000822:	d040      	beq.n	80008a6 <_free_r+0x8a>
 8000824:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000828:	1f0c      	subs	r4, r1, #4
 800082a:	2b00      	cmp	r3, #0
 800082c:	bfb8      	it	lt
 800082e:	18e4      	addlt	r4, r4, r3
 8000830:	f000 f8dc 	bl	80009ec <__malloc_lock>
 8000834:	4a1c      	ldr	r2, [pc, #112]	; (80008a8 <_free_r+0x8c>)
 8000836:	6813      	ldr	r3, [r2, #0]
 8000838:	b933      	cbnz	r3, 8000848 <_free_r+0x2c>
 800083a:	6063      	str	r3, [r4, #4]
 800083c:	6014      	str	r4, [r2, #0]
 800083e:	4628      	mov	r0, r5
 8000840:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000844:	f000 b8d8 	b.w	80009f8 <__malloc_unlock>
 8000848:	42a3      	cmp	r3, r4
 800084a:	d908      	bls.n	800085e <_free_r+0x42>
 800084c:	6820      	ldr	r0, [r4, #0]
 800084e:	1821      	adds	r1, r4, r0
 8000850:	428b      	cmp	r3, r1
 8000852:	bf01      	itttt	eq
 8000854:	6819      	ldreq	r1, [r3, #0]
 8000856:	685b      	ldreq	r3, [r3, #4]
 8000858:	1809      	addeq	r1, r1, r0
 800085a:	6021      	streq	r1, [r4, #0]
 800085c:	e7ed      	b.n	800083a <_free_r+0x1e>
 800085e:	461a      	mov	r2, r3
 8000860:	685b      	ldr	r3, [r3, #4]
 8000862:	b10b      	cbz	r3, 8000868 <_free_r+0x4c>
 8000864:	42a3      	cmp	r3, r4
 8000866:	d9fa      	bls.n	800085e <_free_r+0x42>
 8000868:	6811      	ldr	r1, [r2, #0]
 800086a:	1850      	adds	r0, r2, r1
 800086c:	42a0      	cmp	r0, r4
 800086e:	d10b      	bne.n	8000888 <_free_r+0x6c>
 8000870:	6820      	ldr	r0, [r4, #0]
 8000872:	4401      	add	r1, r0
 8000874:	1850      	adds	r0, r2, r1
 8000876:	4283      	cmp	r3, r0
 8000878:	6011      	str	r1, [r2, #0]
 800087a:	d1e0      	bne.n	800083e <_free_r+0x22>
 800087c:	6818      	ldr	r0, [r3, #0]
 800087e:	685b      	ldr	r3, [r3, #4]
 8000880:	4408      	add	r0, r1
 8000882:	6010      	str	r0, [r2, #0]
 8000884:	6053      	str	r3, [r2, #4]
 8000886:	e7da      	b.n	800083e <_free_r+0x22>
 8000888:	d902      	bls.n	8000890 <_free_r+0x74>
 800088a:	230c      	movs	r3, #12
 800088c:	602b      	str	r3, [r5, #0]
 800088e:	e7d6      	b.n	800083e <_free_r+0x22>
 8000890:	6820      	ldr	r0, [r4, #0]
 8000892:	1821      	adds	r1, r4, r0
 8000894:	428b      	cmp	r3, r1
 8000896:	bf01      	itttt	eq
 8000898:	6819      	ldreq	r1, [r3, #0]
 800089a:	685b      	ldreq	r3, [r3, #4]
 800089c:	1809      	addeq	r1, r1, r0
 800089e:	6021      	streq	r1, [r4, #0]
 80008a0:	6063      	str	r3, [r4, #4]
 80008a2:	6054      	str	r4, [r2, #4]
 80008a4:	e7cb      	b.n	800083e <_free_r+0x22>
 80008a6:	bd38      	pop	{r3, r4, r5, pc}
 80008a8:	200001c0 	.word	0x200001c0

080008ac <sbrk_aligned>:
 80008ac:	b570      	push	{r4, r5, r6, lr}
 80008ae:	4e0e      	ldr	r6, [pc, #56]	; (80008e8 <sbrk_aligned+0x3c>)
 80008b0:	460c      	mov	r4, r1
 80008b2:	6831      	ldr	r1, [r6, #0]
 80008b4:	4605      	mov	r5, r0
 80008b6:	b911      	cbnz	r1, 80008be <sbrk_aligned+0x12>
 80008b8:	f000 f9d2 	bl	8000c60 <_sbrk_r>
 80008bc:	6030      	str	r0, [r6, #0]
 80008be:	4621      	mov	r1, r4
 80008c0:	4628      	mov	r0, r5
 80008c2:	f000 f9cd 	bl	8000c60 <_sbrk_r>
 80008c6:	1c43      	adds	r3, r0, #1
 80008c8:	d00a      	beq.n	80008e0 <sbrk_aligned+0x34>
 80008ca:	1cc4      	adds	r4, r0, #3
 80008cc:	f024 0403 	bic.w	r4, r4, #3
 80008d0:	42a0      	cmp	r0, r4
 80008d2:	d007      	beq.n	80008e4 <sbrk_aligned+0x38>
 80008d4:	1a21      	subs	r1, r4, r0
 80008d6:	4628      	mov	r0, r5
 80008d8:	f000 f9c2 	bl	8000c60 <_sbrk_r>
 80008dc:	3001      	adds	r0, #1
 80008de:	d101      	bne.n	80008e4 <sbrk_aligned+0x38>
 80008e0:	f04f 34ff 	mov.w	r4, #4294967295
 80008e4:	4620      	mov	r0, r4
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	200001c4 	.word	0x200001c4

080008ec <_malloc_r>:
 80008ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008f0:	1ccd      	adds	r5, r1, #3
 80008f2:	f025 0503 	bic.w	r5, r5, #3
 80008f6:	3508      	adds	r5, #8
 80008f8:	2d0c      	cmp	r5, #12
 80008fa:	bf38      	it	cc
 80008fc:	250c      	movcc	r5, #12
 80008fe:	2d00      	cmp	r5, #0
 8000900:	4607      	mov	r7, r0
 8000902:	db01      	blt.n	8000908 <_malloc_r+0x1c>
 8000904:	42a9      	cmp	r1, r5
 8000906:	d905      	bls.n	8000914 <_malloc_r+0x28>
 8000908:	230c      	movs	r3, #12
 800090a:	2600      	movs	r6, #0
 800090c:	603b      	str	r3, [r7, #0]
 800090e:	4630      	mov	r0, r6
 8000910:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000914:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80009e8 <_malloc_r+0xfc>
 8000918:	f000 f868 	bl	80009ec <__malloc_lock>
 800091c:	f8d8 3000 	ldr.w	r3, [r8]
 8000920:	461c      	mov	r4, r3
 8000922:	bb5c      	cbnz	r4, 800097c <_malloc_r+0x90>
 8000924:	4629      	mov	r1, r5
 8000926:	4638      	mov	r0, r7
 8000928:	f7ff ffc0 	bl	80008ac <sbrk_aligned>
 800092c:	1c43      	adds	r3, r0, #1
 800092e:	4604      	mov	r4, r0
 8000930:	d155      	bne.n	80009de <_malloc_r+0xf2>
 8000932:	f8d8 4000 	ldr.w	r4, [r8]
 8000936:	4626      	mov	r6, r4
 8000938:	2e00      	cmp	r6, #0
 800093a:	d145      	bne.n	80009c8 <_malloc_r+0xdc>
 800093c:	2c00      	cmp	r4, #0
 800093e:	d048      	beq.n	80009d2 <_malloc_r+0xe6>
 8000940:	6823      	ldr	r3, [r4, #0]
 8000942:	4631      	mov	r1, r6
 8000944:	4638      	mov	r0, r7
 8000946:	eb04 0903 	add.w	r9, r4, r3
 800094a:	f000 f989 	bl	8000c60 <_sbrk_r>
 800094e:	4581      	cmp	r9, r0
 8000950:	d13f      	bne.n	80009d2 <_malloc_r+0xe6>
 8000952:	6821      	ldr	r1, [r4, #0]
 8000954:	4638      	mov	r0, r7
 8000956:	1a6d      	subs	r5, r5, r1
 8000958:	4629      	mov	r1, r5
 800095a:	f7ff ffa7 	bl	80008ac <sbrk_aligned>
 800095e:	3001      	adds	r0, #1
 8000960:	d037      	beq.n	80009d2 <_malloc_r+0xe6>
 8000962:	6823      	ldr	r3, [r4, #0]
 8000964:	442b      	add	r3, r5
 8000966:	6023      	str	r3, [r4, #0]
 8000968:	f8d8 3000 	ldr.w	r3, [r8]
 800096c:	2b00      	cmp	r3, #0
 800096e:	d038      	beq.n	80009e2 <_malloc_r+0xf6>
 8000970:	685a      	ldr	r2, [r3, #4]
 8000972:	42a2      	cmp	r2, r4
 8000974:	d12b      	bne.n	80009ce <_malloc_r+0xe2>
 8000976:	2200      	movs	r2, #0
 8000978:	605a      	str	r2, [r3, #4]
 800097a:	e00f      	b.n	800099c <_malloc_r+0xb0>
 800097c:	6822      	ldr	r2, [r4, #0]
 800097e:	1b52      	subs	r2, r2, r5
 8000980:	d41f      	bmi.n	80009c2 <_malloc_r+0xd6>
 8000982:	2a0b      	cmp	r2, #11
 8000984:	d917      	bls.n	80009b6 <_malloc_r+0xca>
 8000986:	1961      	adds	r1, r4, r5
 8000988:	42a3      	cmp	r3, r4
 800098a:	6025      	str	r5, [r4, #0]
 800098c:	bf18      	it	ne
 800098e:	6059      	strne	r1, [r3, #4]
 8000990:	6863      	ldr	r3, [r4, #4]
 8000992:	bf08      	it	eq
 8000994:	f8c8 1000 	streq.w	r1, [r8]
 8000998:	5162      	str	r2, [r4, r5]
 800099a:	604b      	str	r3, [r1, #4]
 800099c:	4638      	mov	r0, r7
 800099e:	f104 060b 	add.w	r6, r4, #11
 80009a2:	f000 f829 	bl	80009f8 <__malloc_unlock>
 80009a6:	f026 0607 	bic.w	r6, r6, #7
 80009aa:	1d23      	adds	r3, r4, #4
 80009ac:	1af2      	subs	r2, r6, r3
 80009ae:	d0ae      	beq.n	800090e <_malloc_r+0x22>
 80009b0:	1b9b      	subs	r3, r3, r6
 80009b2:	50a3      	str	r3, [r4, r2]
 80009b4:	e7ab      	b.n	800090e <_malloc_r+0x22>
 80009b6:	42a3      	cmp	r3, r4
 80009b8:	6862      	ldr	r2, [r4, #4]
 80009ba:	d1dd      	bne.n	8000978 <_malloc_r+0x8c>
 80009bc:	f8c8 2000 	str.w	r2, [r8]
 80009c0:	e7ec      	b.n	800099c <_malloc_r+0xb0>
 80009c2:	4623      	mov	r3, r4
 80009c4:	6864      	ldr	r4, [r4, #4]
 80009c6:	e7ac      	b.n	8000922 <_malloc_r+0x36>
 80009c8:	4634      	mov	r4, r6
 80009ca:	6876      	ldr	r6, [r6, #4]
 80009cc:	e7b4      	b.n	8000938 <_malloc_r+0x4c>
 80009ce:	4613      	mov	r3, r2
 80009d0:	e7cc      	b.n	800096c <_malloc_r+0x80>
 80009d2:	230c      	movs	r3, #12
 80009d4:	4638      	mov	r0, r7
 80009d6:	603b      	str	r3, [r7, #0]
 80009d8:	f000 f80e 	bl	80009f8 <__malloc_unlock>
 80009dc:	e797      	b.n	800090e <_malloc_r+0x22>
 80009de:	6025      	str	r5, [r4, #0]
 80009e0:	e7dc      	b.n	800099c <_malloc_r+0xb0>
 80009e2:	605b      	str	r3, [r3, #4]
 80009e4:	deff      	udf	#255	; 0xff
 80009e6:	bf00      	nop
 80009e8:	200001c0 	.word	0x200001c0

080009ec <__malloc_lock>:
 80009ec:	4801      	ldr	r0, [pc, #4]	; (80009f4 <__malloc_lock+0x8>)
 80009ee:	f7ff bf13 	b.w	8000818 <__retarget_lock_acquire_recursive>
 80009f2:	bf00      	nop
 80009f4:	200001bc 	.word	0x200001bc

080009f8 <__malloc_unlock>:
 80009f8:	4801      	ldr	r0, [pc, #4]	; (8000a00 <__malloc_unlock+0x8>)
 80009fa:	f7ff bf0e 	b.w	800081a <__retarget_lock_release_recursive>
 80009fe:	bf00      	nop
 8000a00:	200001bc 	.word	0x200001bc

08000a04 <__sflush_r>:
 8000a04:	898a      	ldrh	r2, [r1, #12]
 8000a06:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a08:	4605      	mov	r5, r0
 8000a0a:	0710      	lsls	r0, r2, #28
 8000a0c:	460c      	mov	r4, r1
 8000a0e:	d457      	bmi.n	8000ac0 <__sflush_r+0xbc>
 8000a10:	684b      	ldr	r3, [r1, #4]
 8000a12:	2b00      	cmp	r3, #0
 8000a14:	dc04      	bgt.n	8000a20 <__sflush_r+0x1c>
 8000a16:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000a18:	2b00      	cmp	r3, #0
 8000a1a:	dc01      	bgt.n	8000a20 <__sflush_r+0x1c>
 8000a1c:	2000      	movs	r0, #0
 8000a1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a20:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000a22:	2e00      	cmp	r6, #0
 8000a24:	d0fa      	beq.n	8000a1c <__sflush_r+0x18>
 8000a26:	2300      	movs	r3, #0
 8000a28:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000a2c:	682f      	ldr	r7, [r5, #0]
 8000a2e:	6a21      	ldr	r1, [r4, #32]
 8000a30:	602b      	str	r3, [r5, #0]
 8000a32:	d032      	beq.n	8000a9a <__sflush_r+0x96>
 8000a34:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000a36:	89a3      	ldrh	r3, [r4, #12]
 8000a38:	075a      	lsls	r2, r3, #29
 8000a3a:	d505      	bpl.n	8000a48 <__sflush_r+0x44>
 8000a3c:	6863      	ldr	r3, [r4, #4]
 8000a3e:	1ac0      	subs	r0, r0, r3
 8000a40:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000a42:	b10b      	cbz	r3, 8000a48 <__sflush_r+0x44>
 8000a44:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000a46:	1ac0      	subs	r0, r0, r3
 8000a48:	2300      	movs	r3, #0
 8000a4a:	4602      	mov	r2, r0
 8000a4c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000a4e:	4628      	mov	r0, r5
 8000a50:	6a21      	ldr	r1, [r4, #32]
 8000a52:	47b0      	blx	r6
 8000a54:	1c43      	adds	r3, r0, #1
 8000a56:	89a3      	ldrh	r3, [r4, #12]
 8000a58:	d106      	bne.n	8000a68 <__sflush_r+0x64>
 8000a5a:	6829      	ldr	r1, [r5, #0]
 8000a5c:	291d      	cmp	r1, #29
 8000a5e:	d82b      	bhi.n	8000ab8 <__sflush_r+0xb4>
 8000a60:	4a28      	ldr	r2, [pc, #160]	; (8000b04 <__sflush_r+0x100>)
 8000a62:	410a      	asrs	r2, r1
 8000a64:	07d6      	lsls	r6, r2, #31
 8000a66:	d427      	bmi.n	8000ab8 <__sflush_r+0xb4>
 8000a68:	2200      	movs	r2, #0
 8000a6a:	6062      	str	r2, [r4, #4]
 8000a6c:	6922      	ldr	r2, [r4, #16]
 8000a6e:	04d9      	lsls	r1, r3, #19
 8000a70:	6022      	str	r2, [r4, #0]
 8000a72:	d504      	bpl.n	8000a7e <__sflush_r+0x7a>
 8000a74:	1c42      	adds	r2, r0, #1
 8000a76:	d101      	bne.n	8000a7c <__sflush_r+0x78>
 8000a78:	682b      	ldr	r3, [r5, #0]
 8000a7a:	b903      	cbnz	r3, 8000a7e <__sflush_r+0x7a>
 8000a7c:	6560      	str	r0, [r4, #84]	; 0x54
 8000a7e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000a80:	602f      	str	r7, [r5, #0]
 8000a82:	2900      	cmp	r1, #0
 8000a84:	d0ca      	beq.n	8000a1c <__sflush_r+0x18>
 8000a86:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000a8a:	4299      	cmp	r1, r3
 8000a8c:	d002      	beq.n	8000a94 <__sflush_r+0x90>
 8000a8e:	4628      	mov	r0, r5
 8000a90:	f7ff fec4 	bl	800081c <_free_r>
 8000a94:	2000      	movs	r0, #0
 8000a96:	6360      	str	r0, [r4, #52]	; 0x34
 8000a98:	e7c1      	b.n	8000a1e <__sflush_r+0x1a>
 8000a9a:	2301      	movs	r3, #1
 8000a9c:	4628      	mov	r0, r5
 8000a9e:	47b0      	blx	r6
 8000aa0:	1c41      	adds	r1, r0, #1
 8000aa2:	d1c8      	bne.n	8000a36 <__sflush_r+0x32>
 8000aa4:	682b      	ldr	r3, [r5, #0]
 8000aa6:	2b00      	cmp	r3, #0
 8000aa8:	d0c5      	beq.n	8000a36 <__sflush_r+0x32>
 8000aaa:	2b1d      	cmp	r3, #29
 8000aac:	d001      	beq.n	8000ab2 <__sflush_r+0xae>
 8000aae:	2b16      	cmp	r3, #22
 8000ab0:	d101      	bne.n	8000ab6 <__sflush_r+0xb2>
 8000ab2:	602f      	str	r7, [r5, #0]
 8000ab4:	e7b2      	b.n	8000a1c <__sflush_r+0x18>
 8000ab6:	89a3      	ldrh	r3, [r4, #12]
 8000ab8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000abc:	81a3      	strh	r3, [r4, #12]
 8000abe:	e7ae      	b.n	8000a1e <__sflush_r+0x1a>
 8000ac0:	690f      	ldr	r7, [r1, #16]
 8000ac2:	2f00      	cmp	r7, #0
 8000ac4:	d0aa      	beq.n	8000a1c <__sflush_r+0x18>
 8000ac6:	0793      	lsls	r3, r2, #30
 8000ac8:	bf18      	it	ne
 8000aca:	2300      	movne	r3, #0
 8000acc:	680e      	ldr	r6, [r1, #0]
 8000ace:	bf08      	it	eq
 8000ad0:	694b      	ldreq	r3, [r1, #20]
 8000ad2:	1bf6      	subs	r6, r6, r7
 8000ad4:	600f      	str	r7, [r1, #0]
 8000ad6:	608b      	str	r3, [r1, #8]
 8000ad8:	2e00      	cmp	r6, #0
 8000ada:	dd9f      	ble.n	8000a1c <__sflush_r+0x18>
 8000adc:	4633      	mov	r3, r6
 8000ade:	463a      	mov	r2, r7
 8000ae0:	4628      	mov	r0, r5
 8000ae2:	6a21      	ldr	r1, [r4, #32]
 8000ae4:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000ae8:	47e0      	blx	ip
 8000aea:	2800      	cmp	r0, #0
 8000aec:	dc06      	bgt.n	8000afc <__sflush_r+0xf8>
 8000aee:	89a3      	ldrh	r3, [r4, #12]
 8000af0:	f04f 30ff 	mov.w	r0, #4294967295
 8000af4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000af8:	81a3      	strh	r3, [r4, #12]
 8000afa:	e790      	b.n	8000a1e <__sflush_r+0x1a>
 8000afc:	4407      	add	r7, r0
 8000afe:	1a36      	subs	r6, r6, r0
 8000b00:	e7ea      	b.n	8000ad8 <__sflush_r+0xd4>
 8000b02:	bf00      	nop
 8000b04:	dfbffffe 	.word	0xdfbffffe

08000b08 <_fflush_r>:
 8000b08:	b538      	push	{r3, r4, r5, lr}
 8000b0a:	690b      	ldr	r3, [r1, #16]
 8000b0c:	4605      	mov	r5, r0
 8000b0e:	460c      	mov	r4, r1
 8000b10:	b913      	cbnz	r3, 8000b18 <_fflush_r+0x10>
 8000b12:	2500      	movs	r5, #0
 8000b14:	4628      	mov	r0, r5
 8000b16:	bd38      	pop	{r3, r4, r5, pc}
 8000b18:	b118      	cbz	r0, 8000b22 <_fflush_r+0x1a>
 8000b1a:	6a03      	ldr	r3, [r0, #32]
 8000b1c:	b90b      	cbnz	r3, 8000b22 <_fflush_r+0x1a>
 8000b1e:	f7ff fc99 	bl	8000454 <__sinit>
 8000b22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b26:	2b00      	cmp	r3, #0
 8000b28:	d0f3      	beq.n	8000b12 <_fflush_r+0xa>
 8000b2a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000b2c:	07d0      	lsls	r0, r2, #31
 8000b2e:	d404      	bmi.n	8000b3a <_fflush_r+0x32>
 8000b30:	0599      	lsls	r1, r3, #22
 8000b32:	d402      	bmi.n	8000b3a <_fflush_r+0x32>
 8000b34:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b36:	f7ff fe6f 	bl	8000818 <__retarget_lock_acquire_recursive>
 8000b3a:	4628      	mov	r0, r5
 8000b3c:	4621      	mov	r1, r4
 8000b3e:	f7ff ff61 	bl	8000a04 <__sflush_r>
 8000b42:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b44:	4605      	mov	r5, r0
 8000b46:	07da      	lsls	r2, r3, #31
 8000b48:	d4e4      	bmi.n	8000b14 <_fflush_r+0xc>
 8000b4a:	89a3      	ldrh	r3, [r4, #12]
 8000b4c:	059b      	lsls	r3, r3, #22
 8000b4e:	d4e1      	bmi.n	8000b14 <_fflush_r+0xc>
 8000b50:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b52:	f7ff fe62 	bl	800081a <__retarget_lock_release_recursive>
 8000b56:	e7dd      	b.n	8000b14 <_fflush_r+0xc>

08000b58 <__swhatbuf_r>:
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	460c      	mov	r4, r1
 8000b5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b60:	4615      	mov	r5, r2
 8000b62:	2900      	cmp	r1, #0
 8000b64:	461e      	mov	r6, r3
 8000b66:	b096      	sub	sp, #88	; 0x58
 8000b68:	da0c      	bge.n	8000b84 <__swhatbuf_r+0x2c>
 8000b6a:	89a3      	ldrh	r3, [r4, #12]
 8000b6c:	2100      	movs	r1, #0
 8000b6e:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000b72:	bf0c      	ite	eq
 8000b74:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8000b78:	2340      	movne	r3, #64	; 0x40
 8000b7a:	2000      	movs	r0, #0
 8000b7c:	6031      	str	r1, [r6, #0]
 8000b7e:	602b      	str	r3, [r5, #0]
 8000b80:	b016      	add	sp, #88	; 0x58
 8000b82:	bd70      	pop	{r4, r5, r6, pc}
 8000b84:	466a      	mov	r2, sp
 8000b86:	f000 f849 	bl	8000c1c <_fstat_r>
 8000b8a:	2800      	cmp	r0, #0
 8000b8c:	dbed      	blt.n	8000b6a <__swhatbuf_r+0x12>
 8000b8e:	9901      	ldr	r1, [sp, #4]
 8000b90:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8000b94:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8000b98:	4259      	negs	r1, r3
 8000b9a:	4159      	adcs	r1, r3
 8000b9c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ba0:	e7eb      	b.n	8000b7a <__swhatbuf_r+0x22>

08000ba2 <__smakebuf_r>:
 8000ba2:	898b      	ldrh	r3, [r1, #12]
 8000ba4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000ba6:	079d      	lsls	r5, r3, #30
 8000ba8:	4606      	mov	r6, r0
 8000baa:	460c      	mov	r4, r1
 8000bac:	d507      	bpl.n	8000bbe <__smakebuf_r+0x1c>
 8000bae:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000bb2:	6023      	str	r3, [r4, #0]
 8000bb4:	6123      	str	r3, [r4, #16]
 8000bb6:	2301      	movs	r3, #1
 8000bb8:	6163      	str	r3, [r4, #20]
 8000bba:	b002      	add	sp, #8
 8000bbc:	bd70      	pop	{r4, r5, r6, pc}
 8000bbe:	466a      	mov	r2, sp
 8000bc0:	ab01      	add	r3, sp, #4
 8000bc2:	f7ff ffc9 	bl	8000b58 <__swhatbuf_r>
 8000bc6:	9900      	ldr	r1, [sp, #0]
 8000bc8:	4605      	mov	r5, r0
 8000bca:	4630      	mov	r0, r6
 8000bcc:	f7ff fe8e 	bl	80008ec <_malloc_r>
 8000bd0:	b948      	cbnz	r0, 8000be6 <__smakebuf_r+0x44>
 8000bd2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bd6:	059a      	lsls	r2, r3, #22
 8000bd8:	d4ef      	bmi.n	8000bba <__smakebuf_r+0x18>
 8000bda:	f023 0303 	bic.w	r3, r3, #3
 8000bde:	f043 0302 	orr.w	r3, r3, #2
 8000be2:	81a3      	strh	r3, [r4, #12]
 8000be4:	e7e3      	b.n	8000bae <__smakebuf_r+0xc>
 8000be6:	89a3      	ldrh	r3, [r4, #12]
 8000be8:	6020      	str	r0, [r4, #0]
 8000bea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000bee:	81a3      	strh	r3, [r4, #12]
 8000bf0:	9b00      	ldr	r3, [sp, #0]
 8000bf2:	6120      	str	r0, [r4, #16]
 8000bf4:	6163      	str	r3, [r4, #20]
 8000bf6:	9b01      	ldr	r3, [sp, #4]
 8000bf8:	b15b      	cbz	r3, 8000c12 <__smakebuf_r+0x70>
 8000bfa:	4630      	mov	r0, r6
 8000bfc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c00:	f000 f81e 	bl	8000c40 <_isatty_r>
 8000c04:	b128      	cbz	r0, 8000c12 <__smakebuf_r+0x70>
 8000c06:	89a3      	ldrh	r3, [r4, #12]
 8000c08:	f023 0303 	bic.w	r3, r3, #3
 8000c0c:	f043 0301 	orr.w	r3, r3, #1
 8000c10:	81a3      	strh	r3, [r4, #12]
 8000c12:	89a3      	ldrh	r3, [r4, #12]
 8000c14:	431d      	orrs	r5, r3
 8000c16:	81a5      	strh	r5, [r4, #12]
 8000c18:	e7cf      	b.n	8000bba <__smakebuf_r+0x18>
	...

08000c1c <_fstat_r>:
 8000c1c:	b538      	push	{r3, r4, r5, lr}
 8000c1e:	2300      	movs	r3, #0
 8000c20:	4d06      	ldr	r5, [pc, #24]	; (8000c3c <_fstat_r+0x20>)
 8000c22:	4604      	mov	r4, r0
 8000c24:	4608      	mov	r0, r1
 8000c26:	4611      	mov	r1, r2
 8000c28:	602b      	str	r3, [r5, #0]
 8000c2a:	f7ff fb13 	bl	8000254 <_fstat>
 8000c2e:	1c43      	adds	r3, r0, #1
 8000c30:	d102      	bne.n	8000c38 <_fstat_r+0x1c>
 8000c32:	682b      	ldr	r3, [r5, #0]
 8000c34:	b103      	cbz	r3, 8000c38 <_fstat_r+0x1c>
 8000c36:	6023      	str	r3, [r4, #0]
 8000c38:	bd38      	pop	{r3, r4, r5, pc}
 8000c3a:	bf00      	nop
 8000c3c:	200001b8 	.word	0x200001b8

08000c40 <_isatty_r>:
 8000c40:	b538      	push	{r3, r4, r5, lr}
 8000c42:	2300      	movs	r3, #0
 8000c44:	4d05      	ldr	r5, [pc, #20]	; (8000c5c <_isatty_r+0x1c>)
 8000c46:	4604      	mov	r4, r0
 8000c48:	4608      	mov	r0, r1
 8000c4a:	602b      	str	r3, [r5, #0]
 8000c4c:	f7ff fb11 	bl	8000272 <_isatty>
 8000c50:	1c43      	adds	r3, r0, #1
 8000c52:	d102      	bne.n	8000c5a <_isatty_r+0x1a>
 8000c54:	682b      	ldr	r3, [r5, #0]
 8000c56:	b103      	cbz	r3, 8000c5a <_isatty_r+0x1a>
 8000c58:	6023      	str	r3, [r4, #0]
 8000c5a:	bd38      	pop	{r3, r4, r5, pc}
 8000c5c:	200001b8 	.word	0x200001b8

08000c60 <_sbrk_r>:
 8000c60:	b538      	push	{r3, r4, r5, lr}
 8000c62:	2300      	movs	r3, #0
 8000c64:	4d05      	ldr	r5, [pc, #20]	; (8000c7c <_sbrk_r+0x1c>)
 8000c66:	4604      	mov	r4, r0
 8000c68:	4608      	mov	r0, r1
 8000c6a:	602b      	str	r3, [r5, #0]
 8000c6c:	f7ff fb18 	bl	80002a0 <_sbrk>
 8000c70:	1c43      	adds	r3, r0, #1
 8000c72:	d102      	bne.n	8000c7a <_sbrk_r+0x1a>
 8000c74:	682b      	ldr	r3, [r5, #0]
 8000c76:	b103      	cbz	r3, 8000c7a <_sbrk_r+0x1a>
 8000c78:	6023      	str	r3, [r4, #0]
 8000c7a:	bd38      	pop	{r3, r4, r5, pc}
 8000c7c:	200001b8 	.word	0x200001b8

08000c80 <_init>:
 8000c80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c82:	bf00      	nop
 8000c84:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c86:	bc08      	pop	{r3}
 8000c88:	469e      	mov	lr, r3
 8000c8a:	4770      	bx	lr

08000c8c <_fini>:
 8000c8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c8e:	bf00      	nop
 8000c90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c92:	bc08      	pop	{r3}
 8000c94:	469e      	mov	lr, r3
 8000c96:	4770      	bx	lr
